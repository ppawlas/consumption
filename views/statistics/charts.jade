extends ../layout

block content
	h1= title
	
	script(src='/javascripts/jquery-2.0.3.min.js')	
	script(src='/javascripts/d3.min.js')		
	script.
		$(document).ready(function() {
			function prepare(json) {
				var data = [];

				json.periods.forEach(function(period) {
					obj = {}
					obj.date = parseDate(period);
					obj.gas = json.data[period].gas;
					data.push(obj);
				});

				return data;
			}

			var margin = {top: 20, right: 20, bottom: 30, left: 50},
			width = 960 - margin.left - margin.right,
			height = 500 - margin.top - margin.bottom;

			var parseDate = d3.time.format('%Y-%m').parse;

			var x = d3.time.scale()
					.range([0, width]);

			var y = d3.scale.linear()
					.range([height, 0]);

			var xAxis = d3.svg.axis()
					.scale(x)
					.orient('bottom');

			var yAxis = d3.svg.axis()
					.scale(y)
					.orient('left');		

			var line = d3.svg.line()
				.x(function(d) { return x(d.date); })
				.y(function(d) { return y(d.gas); });	
				
			var svg = d3.select('body').append('svg')
					.attr('width', width + margin.left + margin.right)
					.attr('height', height + margin.top + margin.bottom)
				.append('g')
					.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');						

			d3.json('/statistics/json', function(err, json) {
				if (err) {
					console.warn(err);
				}
				var data = prepare(json);

				x.domain(d3.extent(data, function(d) { return d.date; }));
				y.domain(d3.extent(data, function(d) { return d.gas; }));			

				svg.append('g')
						.attr('class', 'x axis')
						.attr('transform', 'translate(0,' + height + ')')
						.call(xAxis);

				svg.append('g')
						.attr('class', 'y axis')
						.call(yAxis)
					.append('text')
						.attr('transform', 'rotate(-90)')
						.attr('y', 6)
						.attr('dy', '.71em')
						.style('text-anchor', 'end')
						.text('Usage');

				svg.append('path')
						.datum(data)
						.attr('class', 'line')
						.attr('d', line);			
			});
		});